{"version":3,"sources":["../config.ts","ipc.ts","security.ts","index.ts"],"names":[],"mappings":"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","file":"index.map","sourceRoot":"../../src/main","sourcesContent":["export const config = {\n  cooperUrl: 'https://desktop-build-bot.herokuapp.com',\n  teamName: 'tinyspeck',\n  isDevMode: process.execPath.match(/[\\\\/]electron/)\n};\n","import { ipcMain, shell, BrowserWindow } from 'electron';\n\nexport class IpcManager {\n  constructor() {\n    this.setupFileDrop();\n    this.setupProcessingStatus();\n  }\n\n  public openFile(path: string) {\n    this.getMainWindow().webContents.send('file-dropped', path);\n  }\n\n  private setupProcessingStatus() {\n    ipcMain.on('processing-status', (_event: any, status: any) => {\n      this.getMainWindow().webContents.send('processing-status', status);\n    });\n  }\n\n  private getMainWindow(): Electron.BrowserWindow {\n    const allWindows = BrowserWindow.getAllWindows();\n\n    if (allWindows && allWindows.length > 0) {\n      return allWindows[0];\n    } else {\n      throw new Error('Could not find window!');\n    }\n  }\n\n  private setupFileDrop() {\n    this.getMainWindow().webContents.on('will-navigate', (e, url) => {\n      e.preventDefault();\n\n      if (!url.startsWith('file:///')) {\n        shell.openExternal(url);\n      } else {\n        this.openFile(decodeURIComponent(url.replace('file:///', '/')));\n      }\n    });\n  }\n}\n","import { app } from 'electron';\r\nimport { URL } from 'url';\r\n\r\n// tslint:disable:no-console\r\n\r\n/**\r\n * Attempts to secure the app by disallowing things we do\r\n * not need.\r\n *\r\n * @export\r\n */\r\nexport function secureApp() {\r\n  app.on('web-contents-created', (_event, webContents) => {\r\n    // Disallow navigation\r\n    webContents.on('will-navigate', (event, url) => {\r\n      const parsedUrl = new URL(url);\r\n\r\n      const isSlack = parsedUrl.hostname.endsWith('slack.com');\r\n      const isOkta = parsedUrl.hostname.endsWith('okta.com');\r\n      const isFile = parsedUrl.protocol === 'file';\r\n\r\n      if (!isSlack && !isOkta && !isFile) {\r\n        console.warn(`Prevented navigation to ${url}`);\r\n        console.log(`Hostname: ${parsedUrl.hostname}`);\r\n        event.preventDefault();\r\n      }\r\n    });\r\n\r\n    // Disallow new-window\r\n    webContents.on('new-window', (event, url) => {\r\n      console.warn(`Prevented new-window for ${url}`);\r\n      event.preventDefault();\r\n    });\r\n  });\r\n}\r\n\r\n// tslint:enable:no-console\r\n","import { app, BrowserWindow } from 'electron';\r\nimport installExtension, { REACT_DEVELOPER_TOOLS } from 'electron-devtools-installer';\r\n\r\nimport { config } from '../config';\r\nimport { IpcManager } from './ipc';\r\nimport { secureApp } from './security';\r\n\r\n// Keep a global reference of the window object, if you don't, the window will\r\n// be closed automatically when the JavaScript object is garbage collected.\r\nlet mainWindow: Electron.BrowserWindow | null;\r\nlet ipcManager: IpcManager;\r\n\r\nif (require('electron-squirrel-startup')) {\r\n  // No-op, we're done here\r\n} else {\r\n  const createWindow = async () => {\r\n    const windowStateKeeper = require('electron-window-state');\r\n    require('electron-context-menu')();\r\n\r\n    const mainWindowState = windowStateKeeper({\r\n      defaultWidth: 1200,\r\n      defaultHeight: 800\r\n    });\r\n\r\n    // Create the browser window.\r\n    mainWindow = new BrowserWindow({\r\n      x: mainWindowState.x,\r\n      y: mainWindowState.y,\r\n      width: mainWindowState.width,\r\n      height: mainWindowState.height,\r\n      show: !!config.isDevMode,\r\n      minHeight: 500,\r\n      minWidth: 1000,\r\n      titleBarStyle: process.platform === 'darwin' ? 'hiddenInset' : undefined,\r\n      webPreferences: {\r\n        webviewTag: false\r\n      }\r\n    });\r\n\r\n    mainWindowState.manage(mainWindow);\r\n\r\n    // and load the index.html of the app.\r\n    mainWindow.loadFile('./dist/index.html');\r\n\r\n    // Open the DevTools.\r\n    if (config.isDevMode) {\r\n      await installExtension(REACT_DEVELOPER_TOOLS);\r\n      mainWindow.webContents.openDevTools();\r\n    }\r\n\r\n    // Emitted when the window is closed.\r\n    mainWindow.on('closed', () => {\r\n      // Dereference the window object, usually you would store windows\r\n      // in an array if your app supports multi windows, this is the time\r\n      // when you should delete the corresponding element.\r\n      mainWindow = null;\r\n    });\r\n\r\n    ipcManager = new IpcManager();\r\n  };\r\n\r\n  // Whenever the app has finished launching\r\n  app.on('will-finish-launching', () => {\r\n    app.on('open-file', (event, path) => {\r\n      event.preventDefault();\r\n\r\n      function openWhenReady() {\r\n        if (ipcManager) {\r\n          ipcManager.openFile(path);\r\n        } else {\r\n          setTimeout(openWhenReady, 500);\r\n        }\r\n      }\r\n\r\n      openWhenReady();\r\n    });\r\n  });\r\n\r\n  // This method will be called when Electron has finished\r\n  // initialization and is ready to create browser windows.\r\n  // Some APIs can only be used after this event occurs.\r\n  app.on('ready', () => {\r\n    secureApp();\r\n    createWindow();\r\n  });\r\n\r\n  // Quit when all windows are closed.\r\n  app.on('window-all-closed', () => {\r\n    // On OS X it is common for applications and their menu bar\r\n    // to stay active until the user quits explicitly with Cmd + Q\r\n    if (process.platform !== 'darwin') {\r\n      app.quit();\r\n    }\r\n  });\r\n\r\n  app.on('activate', () => {\r\n    // On OS X it's common to re-create a window in the app when the\r\n    // dock icon is clicked and there are no other windows open.\r\n    if (mainWindow === null) {\r\n      createWindow();\r\n    }\r\n  });\r\n}\r\n"]}